// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pbl3_appstore.models;

#nullable disable

namespace pbl3_appstore.Migrations
{
    [DbContext(typeof(appStoreDbcontext))]
    [Migration("20230318040419_datav4")]
    partial class datav4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pbl3_appstore.models.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("invoice_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.HasIndex("invoice_id")
                        .IsUnique();

                    b.ToTable("customers");
                });

            modelBuilder.Entity("pbl3_appstore.models.Invoice", b =>
                {
                    b.Property<int>("invoice_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("invoice_id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<int>("staff_id")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("invoice_id");

                    b.HasIndex("staff_id");

                    b.ToTable("invoices");
                });

            modelBuilder.Entity("pbl3_appstore.models.Item", b =>
                {
                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<string>("item_count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price_import")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price_pay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_guarantee_id")
                        .HasColumnType("int");

                    b.HasKey("item_id");

                    b.HasIndex("product_guarantee_id")
                        .IsUnique();

                    b.ToTable("items");
                });

            modelBuilder.Entity("pbl3_appstore.models.Person", b =>
                {
                    b.Property<int>("person_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("person_id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gender")
                        .HasColumnType("bit");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("person_id");

                    b.HasIndex("role_id")
                        .IsUnique();

                    b.ToTable("persons");
                });

            modelBuilder.Entity("pbl3_appstore.models.ProductGuarantee", b =>
                {
                    b.Property<int>("product_guarantee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_guarantee_id"));

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_pay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_recieve")
                        .HasColumnType("datetime2");

                    b.Property<double>("money_pay")
                        .HasColumnType("float");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_guarantee_id");

                    b.ToTable("productGuarantees");
                });

            modelBuilder.Entity("pbl3_appstore.models.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"));

                    b.Property<string>("name_role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("pbl3_appstore.models.Staff", b =>
                {
                    b.Property<int?>("staff_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("staff_id"));

                    b.Property<string>("position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_guarantee_id")
                        .HasColumnType("int");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.HasKey("staff_id");

                    b.ToTable("staffs");
                });

            modelBuilder.Entity("pbl3_appstore.models.StatusGuarantee", b =>
                {
                    b.Property<int>("status_guarantee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("status_guarantee_id"));

                    b.Property<int>("product_guarantee_id")
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("status_guarantee_id");

                    b.HasIndex("product_guarantee_id")
                        .IsUnique();

                    b.ToTable("statusGuarantees");
                });

            modelBuilder.Entity("pbl3_appstore.models.Supplier", b =>
                {
                    b.Property<int>("supplier_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplier_id"));

                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<string>("supplier_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplier_id");

                    b.HasIndex("item_id")
                        .IsUnique();

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("pbl3_appstore.models.Customer", b =>
                {
                    b.HasOne("pbl3_appstore.models.Invoice", "invoice")
                        .WithOne("customer")
                        .HasForeignKey("pbl3_appstore.models.Customer", "invoice_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("invoice");
                });

            modelBuilder.Entity("pbl3_appstore.models.Invoice", b =>
                {
                    b.HasOne("pbl3_appstore.models.Staff", "staff")
                        .WithMany("Invoices")
                        .HasForeignKey("staff_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("staff");
                });

            modelBuilder.Entity("pbl3_appstore.models.Item", b =>
                {
                    b.HasOne("pbl3_appstore.models.Invoice", "invoice")
                        .WithMany("items")
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pbl3_appstore.models.ProductGuarantee", "productGuarantee")
                        .WithOne("item")
                        .HasForeignKey("pbl3_appstore.models.Item", "product_guarantee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("invoice");

                    b.Navigation("productGuarantee");
                });

            modelBuilder.Entity("pbl3_appstore.models.Person", b =>
                {
                    b.HasOne("pbl3_appstore.models.Role", "role")
                        .WithOne("person")
                        .HasForeignKey("pbl3_appstore.models.Person", "role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("pbl3_appstore.models.StatusGuarantee", b =>
                {
                    b.HasOne("pbl3_appstore.models.ProductGuarantee", "ProductGuarantee")
                        .WithOne("status")
                        .HasForeignKey("pbl3_appstore.models.StatusGuarantee", "product_guarantee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGuarantee");
                });

            modelBuilder.Entity("pbl3_appstore.models.Supplier", b =>
                {
                    b.HasOne("pbl3_appstore.models.Item", "item")
                        .WithOne("supplier")
                        .HasForeignKey("pbl3_appstore.models.Supplier", "item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("pbl3_appstore.models.Invoice", b =>
                {
                    b.Navigation("customer");

                    b.Navigation("items");
                });

            modelBuilder.Entity("pbl3_appstore.models.Item", b =>
                {
                    b.Navigation("supplier");
                });

            modelBuilder.Entity("pbl3_appstore.models.ProductGuarantee", b =>
                {
                    b.Navigation("item");

                    b.Navigation("status");
                });

            modelBuilder.Entity("pbl3_appstore.models.Role", b =>
                {
                    b.Navigation("person");
                });

            modelBuilder.Entity("pbl3_appstore.models.Staff", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
